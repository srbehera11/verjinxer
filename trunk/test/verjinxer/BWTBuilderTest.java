package verjinxer;

import static org.junit.Assert.*;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import java.util.Arrays;
import java.util.Random;

import org.junit.Test;

import verjinxer.sequenceanalysis.Alphabet;
import verjinxer.sequenceanalysis.Sequences;
import verjinxer.sequenceanalysis.SuffixXorDLL;

/**
 * @author Markus Kemmerling
 */
public class BWTBuilderTest {
   
   final static Alphabet alphabet = new Alphabet(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9",
   "##separators:0" });

   @Test
   public void testBuildDet() {
      byte[][] s = { {1,1,3,1,2,1,1,3,1,2,4,0},
            {1,1,3,1,2,1,1,3,1,2,0},
            {4,4,2,2,4,1,2,4,4,2,1,3,3,3,2,2,1,4,1,1,1,3,2,2,4,0},
            {4,4,2,2,4,1,2,4,4,2,1,3,3,3,2,2,1,4,1,1,1,3,2,2,4,0},
            {4,3,2,1,4,3,2,1,4,3,2,4,1,3,2,4,1,3,2,4,4,4,2,3,1,3,2,4,1,4,0},
            {3,2,4,3,2,4,4,1,3,4,2,1,4,2,3,4,2,3,4,4,2,1,3,4,1,4,4,3,2,1,2,3,1,3,2,1,2,3,1,3,2,1,2,1,0},
            {4,3,1,4,3,2,4,1,2,1,3,2,1,2,3,1,4,2,3,4,1,2,3,4,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0},
            {3,1,4,3,1,3,2,4,1,3,2,1,3,2,4,1,3,2,1,2,3,4,1,3,2,1,3,2,4,0},
            {4,3,4,3,2,1,3,2,4,1,3,2,4,1,3,2,4,1,2,3,4,1,3,2,4,1,3,2,4,1,2,3,4,0},
            {4,3,2,1,4,3,2,1,2,3,2,3,4,3,2,1,3,2,4,2,3,1,0},
            {1,2,4,1,4,2,3,1,4,2,1,4,3,2,1,4,3,2,0},
            {9,9,2,2,9,1,2,9,9,2,1,3,3,3,2,2,1,9,1,1,1,3,2,2,9,0}
      };
      
      for (int i = 0; i < s.length; i++) {
         Sequences sequence = Sequences.createEmptySequencesInMemory();
         try {
            sequence.addSequence(ByteBuffer.wrap(s[i]));
         } catch (IOException e) {
            e.printStackTrace();
         }

         final SuffixTrayBuilder stb = new SuffixTrayBuilder(sequence, alphabet);
         stb.build("bothLR"); // WARNING: change the method and you must change the type cast in the
                              // next line!
         assert (stb.getSuffixDLL() instanceof SuffixXorDLL);
         final SuffixXorDLL suffixDLL = (SuffixXorDLL) stb.getSuffixDLL(); // type cast is okay
                                                                           // because I used method
                                                                           // 'bothLR' to build the
                                                                           // list
         
         byte[] referenceBWT = bwt(s[i]);
         
         assertArrayEquals(String.format("Failure by sequence %d wile using SuffixXorDLL", i), referenceBWT , BWTBuilder.build(suffixDLL));
         
         suffixDLL.resetToBegin();
         int[] a = new int[suffixDLL.capacity()];
         int j = 0;
         if (suffixDLL.getCurrentPosition() != -1) {
            a[j++] = suffixDLL.getCurrentPosition();
            while (suffixDLL.hasNextUp()) {
               suffixDLL.nextUp();
               a[j++] = suffixDLL.getCurrentPosition();
            }
         }
         IntBuffer buf = IntBuffer.wrap(a);

         assertArrayEquals(String.format("Failure by sequence %d wile using IntBuffer", i), referenceBWT , BWTBuilder.build(buf, sequence));
         
      }
   }
   
   @Test
   public void testBuildRandome() {
      byte[]s = null;
      
      Random rand = new Random(100);
      
      for (int i = 0; i < 50; i++) {
         s = new byte[500 + rand.nextInt(500)];
         
         for(int j = 0; j < s.length-1; j++) {
            s[j] = (byte)(1 + rand.nextInt(8));
         }
         s[s.length-1] = 0;
         
         Sequences sequence = Sequences.createEmptySequencesInMemory();
         try {
            sequence.addSequence(ByteBuffer.wrap(s));
         } catch (IOException e) {
            e.printStackTrace();
         }

         final SuffixTrayBuilder stb = new SuffixTrayBuilder(sequence, alphabet);
         stb.build("bothLR"); // WARNING: change the method and you must change the type cast in the
                              // next line!
         assert (stb.getSuffixDLL() instanceof SuffixXorDLL);
         final SuffixXorDLL suffixDLL = (SuffixXorDLL) stb.getSuffixDLL(); // type cast is okay
                                                                           // because I used method
                                                                           // 'bothLR' to build the
                                                                           // list
         
         byte[] referenceBWT = bwt(s);
         
         assertArrayEquals(String.format("Failure by sequence %d wile using SuffixXorDLL", i), referenceBWT , BWTBuilder.build(suffixDLL));
         
         suffixDLL.resetToBegin();
         int[] a = new int[suffixDLL.capacity()];
         int j = 0;
         if (suffixDLL.getCurrentPosition() != -1) {
            a[j++] = suffixDLL.getCurrentPosition();
            while (suffixDLL.hasNextUp()) {
               suffixDLL.nextUp();
               a[j++] = suffixDLL.getCurrentPosition();
            }
         }
         IntBuffer buf = IntBuffer.wrap(a);

         assertArrayEquals(String.format("Failure by sequence %d wile using IntBuffer", i), referenceBWT , BWTBuilder.build(buf, sequence));
         
      }
   }
   
   @Test
   public void testBuildchrM() {
      byte[] s = {3,1,4,2,1,2,1,3,3,4,2,4,1,4,2,1,2,2,2,4,1,4,4,1,1,2,2,1,2,4,2,1,2,3,3,3,1,3,2,4,2,4,2,2,1,4,3,2,1,4,4,4,3,3,4,1,4,4,4,4,2,3,4,2,4,3,3,3,3,3,3,4,3,4,3,2,1,2,3,2,3,1,4,1,3,2,1,4,4,3,2,3,1,3,1,2,3,2,4,3,3,1,3,2,2,3,3,1,3,2,1,2,2,2,4,1,4,3,4,2,3,2,1,3,4,1,4,2,4,3,4,2,4,4,4,3,1,4,4,2,2,4,3,2,2,4,2,1,4,4,2,4,1,4,4,1,4,4,4,1,4,2,3,2,1,2,2,4,1,2,3,4,4,2,1,1,4,1,4,4,1,2,1,3,3,2,3,1,1,2,1,4,1,2,2,4,1,2,4,1,1,1,3,4,3,4,3,4,4,1,1,4,4,1,1,4,4,1,1,4,3,2,4,4,3,4,1,3,3,1,2,1,4,1,1,4,1,1,4,1,1,2,1,1,4,4,3,1,1,4,3,4,2,4,3,2,1,2,1,3,2,2,3,2,4,4,4,2,2,1,2,1,2,1,3,1,2,1,4,2,1,4,1,1,2,1,1,1,1,1,1,4,4,4,2,2,1,2,2,1,1,1,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,3,2,4,4,2,4,3,3,2,2,1,2,1,3,2,1,2,4,4,1,1,1,2,1,2,1,4,2,4,2,4,3,2,2,1,1,1,2,2,2,2,1,1,1,1,1,2,1,1,1,3,1,1,2,2,2,4,1,1,2,1,2,2,1,3,2,2,4,1,1,2,2,1,3,1,4,4,4,2,1,1,1,4,4,4,4,1,4,2,4,4,4,1,3,3,2,3,3,4,1,4,3,2,1,2,4,4,4,4,1,1,2,1,3,4,2,1,2,2,2,2,2,2,1,1,2,4,1,1,2,1,2,1,4,4,1,4,4,4,4,2,2,2,2,4,2,2,2,1,2,4,2,2,2,1,4,1,2,4,1,2,4,1,1,4,2,4,2,1,4,2,1,1,4,1,2,1,1,2,2,2,2,2,3,2,2,2,1,4,2,2,4,1,2,2,2,1,3,2,1,2,1,2,1,2,1,2,1,2,2,3,2,4,3,2,4,1,1,2,2,2,2,1,4,1,2,2,2,2,3,1,1,2,2,1,1,2,2,1,1,1,2,2,2,2,1,1,1,3,1,2,1,2,2,2,2,2,2,1,2,1,3,4,4,4,1,4,3,4,1,3,2,4,4,1,2,2,4,2,2,4,2,1,1,1,3,2,1,1,4,1,2,1,2,4,3,1,1,1,1,4,3,4,4,4,1,3,1,2,3,3,3,2,4,2,1,2,1,4,2,1,2,2,2,2,1,4,1,1,1,2,1,1,1,4,1,3,3,4,4,4,3,3,4,2,2,4,1,3,2,2,4,4,4,2,4,1,4,4,1,3,2,4,2,4,4,1,3,4,1,1,3,1,4,4,1,2,1,2,1,4,3,2,1,1,3,2,1,4,2,2,2,2,3,4,4,2,2,1,3,4,3,1,3,4,4,2,1,2,2,2,4,2,4,1,1,1,4,2,1,2,2,1,2,3,1,4,2,1,1,1,1,3,3,3,1,2,1,1,3,2,1,4,2,1,1,3,2,1,2,3,2,1,3,2,1,1,4,3,2,1,3,2,4,2,1,1,1,1,2,3,2,4,4,1,3,2,2,4,1,3,2,2,1,2,1,2,2,2,2,2,1,2,3,3,3,1,1,1,2,1,3,2,1,3,4,3,1,4,4,1,1,2,2,4,4,4,1,3,2,1,1,4,1,1,1,2,3,1,1,1,3,4,4,4,1,1,2,4,1,1,3,2,4,1,4,1,2,4,1,1,2,2,2,2,1,3,3,3,4,4,3,3,4,2,1,1,4,4,4,2,3,4,3,2,2,1,3,2,2,1,2,2,3,2,3,3,4,2,1,2,1,2,3,1,4,4,1,1,2,2,2,1,1,3,4,2,1,1,4,1,3,1,1,3,2,2,3,3,2,3,4,1,1,1,3,1,3,4,3,4,4,4,4,1,3,1,4,2,1,2,2,2,2,2,4,2,2,2,2,1,1,4,1,1,1,3,2,4,1,1,1,1,2,4,2,1,2,2,4,3,1,3,4,4,3,4,1,1,1,1,1,1,2,4,2,2,1,3,4,4,3,1,2,1,2,1,1,1,1,4,1,3,1,2,4,1,2,3,1,1,1,3,4,3,3,2,4,4,4,1,1,2,1,4,1,4,2,4,3,1,1,2,1,2,1,2,1,1,4,1,3,2,4,1,1,3,1,2,2,2,1,1,1,2,4,3,3,3,1,4,4,1,3,1,4,1,2,2,2,2,1,2,4,1,4,3,2,4,4,1,3,2,2,2,4,1,1,1,2,2,4,2,1,1,2,1,3,4,4,1,1,1,4,2,1,1,2,1,1,1,1,2,4,3,2,4,2,3,2,2,1,3,1,1,2,1,2,4,1,2,3,1,3,2,2,1,2,1,3,2,4,4,1,1,1,1,2,4,2,1,1,1,3,3,1,2,2,4,3,3,2,3,3,4,3,2,4,4,2,1,4,1,4,2,2,2,4,2,4,1,3,1,3,3,1,3,2,2,4,3,4,4,2,4,3,4,1,1,4,2,3,1,4,1,1,1,2,2,2,2,3,1,4,2,1,1,2,2,4,2,1,2,2,1,2,2,4,2,4,4,3,2,4,2,1,3,2,2,4,1,4,1,4,1,2,2,3,2,2,1,4,2,4,4,2,1,3,2,1,1,1,2,2,2,4,3,1,4,3,1,1,3,3,2,4,1,2,1,1,1,3,4,1,1,3,2,3,2,1,1,3,4,1,2,2,2,1,2,3,4,1,1,1,3,1,2,3,4,4,1,3,3,4,2,1,1,3,3,4,3,4,1,3,2,2,2,1,4,3,1,3,3,4,3,3,2,1,1,3,1,1,1,4,3,3,3,2,4,1,2,1,4,4,4,4,2,4,1,2,2,2,2,1,3,1,1,1,1,2,4,1,2,3,1,4,1,3,2,2,2,4,4,1,4,3,1,1,1,2,4,4,1,1,3,3,3,4,2,3,1,1,3,3,4,3,3,1,4,4,4,1,3,2,1,3,4,1,1,1,2,4,3,1,3,1,3,4,1,3,1,3,4,3,2,4,4,1,3,4,4,3,1,1,2,1,3,3,3,2,2,2,4,3,1,1,3,2,3,2,3,4,1,2,1,2,1,2,2,3,2,2,2,3,4,2,1,2,2,2,4,2,2,4,2,1,1,3,4,1,4,1,2,4,4,2,1,1,1,3,3,1,2,1,4,4,4,1,1,2,4,1,1,1,1,2,2,2,2,4,1,2,3,2,1,4,4,4,1,4,1,4,1,3,1,3,3,1,3,1,2,1,1,3,4,2,3,4,1,1,2,1,4,3,3,4,1,1,3,4,3,4,1,2,4,3,3,1,1,1,3,4,3,2,1,2,4,4,3,3,1,2,3,1,1,2,2,1,3,1,3,4,3,4,1,3,2,4,4,1,1,2,1,2,1,1,1,3,2,1,2,2,2,1,1,2,4,4,1,2,1,2,4,4,1,3,3,1,3,1,4,4,4,2,1,1,2,4,4,1,1,2,4,4,3,1,2,2,3,2,4,2,4,3,1,3,2,4,1,1,1,2,2,4,1,3,2,2,2,2,1,1,1,2,2,2,1,2,4,2,2,1,2,2,4,4,1,2,4,1,2,2,1,3,1,2,1,1,2,2,4,4,1,3,2,2,1,1,1,2,2,1,4,4,4,1,2,2,2,1,1,1,4,1,1,1,3,4,1,4,1,3,3,2,3,1,4,1,3,1,1,1,4,4,3,1,1,1,2,2,4,3,3,2,3,2,1,1,4,1,3,1,4,1,4,1,3,4,1,2,2,3,2,1,1,3,3,3,1,1,1,3,1,4,3,1,1,1,1,1,4,4,1,4,1,1,2,2,1,1,3,2,1,4,1,1,4,1,4,1,3,2,1,1,3,3,1,2,4,1,1,2,2,2,2,4,1,4,1,2,2,4,4,2,4,3,2,1,4,1,1,4,3,1,1,4,4,1,1,2,4,1,3,1,1,1,4,1,1,2,4,4,4,3,2,1,1,3,3,1,3,1,3,2,2,1,1,1,3,2,4,1,1,3,1,2,2,2,2,2,3,1,1,1,2,2,1,3,1,2,3,1,3,2,4,1,2,2,4,1,1,3,1,1,2,1,3,2,4,1,1,1,1,3,1,3,2,1,2,1,2,2,2,3,4,2,4,1,4,3,4,1,3,2,1,1,1,1,4,1,3,4,3,3,3,1,1,3,1,4,4,4,1,4,1,3,3,4,1,3,1,3,3,2,3,1,2,1,1,1,2,2,4,1,2,2,3,1,3,2,2,4,3,3,4,3,1,4,1,3,2,4,3,3,4,4,3,4,2,2,1,1,3,1,4,1,3,1,1,4,2,4,4,1,3,4,4,2,1,1,2,4,4,4,1,1,1,4,4,4,3,2,2,2,1,2,1,3,1,1,2,2,2,4,2,4,1,1,1,4,2,2,2,2,4,4,3,4,1,1,1,4,4,4,1,1,2,4,3,4,4,1,3,4,2,2,1,1,1,3,1,3,3,1,1,2,1,3,2,4,2,4,4,4,3,3,1,2,1,2,4,1,3,3,1,1,1,1,1,1,2,2,4,4,3,4,1,3,1,3,1,3,1,3,4,1,1,1,1,1,1,4,4,4,1,1,2,1,2,2,2,1,4,1,3,4,1,3,3,2,2,4,1,1,1,1,3,2,1,3,2,2,1,2,2,1,1,4,4,1,1,3,1,1,1,3,2,3,4,4,2,1,1,3,2,4,2,1,1,2,1,2,2,2,1,2,4,1,2,2,4,1,1,1,1,1,1,4,2,2,2,1,1,1,2,1,4,1,4,1,1,2,4,3,1,1,2,4,2,2,4,2,1,2,1,2,2,2,1,1,4,4,3,3,1,2,2,1,1,4,2,4,1,4,2,1,2,2,2,4,1,4,1,3,1,1,3,1,1,2,4,1,1,4,3,4,4,1,3,4,1,4,1,1,3,4,1,1,2,1,4,3,1,1,1,1,2,1,4,4,2,4,2,2,4,2,2,3,2,1,4,1,1,3,2,2,4,3,2,3,4,2,1,3,1,4,2,1,1,1,1,2,1,2,4,3,1,1,2,4,3,1,2,1,1,4,4,1,1,2,1,3,2,2,2,1,1,4,1,4,2,4,1,2,1,1,4,2,1,1,2,2,1,1,2,1,1,3,4,2,1,4,4,1,4,4,1,2,2,2,4,2,1,2,4,3,4,2,1,1,2,2,2,1,1,2,1,2,1,3,3,2,1,4,3,2,4,2,1,4,1,1,3,3,1,1,1,3,3,4,4,1,1,1,1,1,1,1,3,4,1,1,1,1,3,3,1,1,2,4,2,3,3,2,1,1,1,2,2,4,4,1,2,2,2,2,3,2,2,4,3,4,4,4,1,2,2,1,1,1,1,1,2,1,4,2,1,2,2,4,2,4,1,3,2,1,4,2,1,2,2,1,3,4,1,4,4,1,3,1,3,3,2,1,2,2,3,2,2,4,3,2,2,2,1,3,4,3,1,2,1,2,1,4,3,4,4,4,1,1,2,3,3,2,2,3,2,3,3,4,1,2,2,2,4,1,1,2,2,3,4,3,2,1,1,1,3,3,4,1,3,2,1,4,1,1,4,2,1,2,4,4,3,4,4,2,2,4,4,1,1,1,4,1,3,3,3,1,2,2,4,3,4,1,4,3,1,1,4,3,3,2,4,2,2,1,2,3,1,3,3,3,4,4,2,1,3,2,4,3,4,2,4,2,4,4,1,2,4,4,4,4,1,1,2,2,1,3,4,3,1,1,1,4,4,3,1,2,2,4,3,2,2,2,3,4,3,1,1,3,1,3,3,2,3,3,3,2,1,4,3,1,2,1,2,1,3,2,1,1,3,1,2,3,1,3,1,1,3,1,2,2,2,4,1,4,3,3,1,3,2,4,4,4,1,1,4,4,4,1,4,4,1,1,4,3,2,1,1,1,2,1,3,4,1,2,2,4,1,1,2,1,1,1,2,2,2,1,2,1,3,3,4,2,2,4,1,1,1,2,4,1,2,2,1,1,1,2,2,4,3,2,1,4,4,1,1,1,1,1,4,4,4,2,3,3,4,4,3,3,3,3,2,3,1,2,2,4,2,3,3,1,3,2,1,3,1,1,2,2,2,1,1,2,2,4,2,2,3,1,3,2,1,3,4,1,2,1,4,3,2,4,1,1,3,1,2,4,4,2,1,2,2,1,3,4,2,1,1,1,3,2,3,1,1,2,4,1,2,4,1,4,1,2,4,2,1,1,4,4,3,1,4,2,2,1,1,4,1,1,2,4,4,3,1,2,2,1,1,2,3,3,1,1,2,1,1,3,4,4,1,2,2,2,4,1,3,3,3,1,4,1,1,2,1,3,2,3,2,1,1,4,2,2,4,1,4,4,2,4,1,3,1,3,4,2,2,1,4,1,4,2,1,1,2,1,1,4,1,3,3,3,4,4,4,1,2,3,1,2,2,4,2,3,1,4,3,4,4,3,3,1,4,2,1,3,3,1,2,1,4,2,2,2,3,1,4,3,3,4,3,2,1,3,2,2,3,2,4,1,4,4,1,1,1,3,3,4,4,2,3,4,4,4,3,4,4,2,1,1,2,3,1,4,4,1,1,1,3,4,2,2,4,1,2,3,4,3,1,4,2,4,3,1,3,4,4,2,1,3,1,2,2,3,3,1,3,4,1,1,4,2,2,1,3,3,4,2,3,3,4,4,4,2,4,1,4,2,4,1,2,4,4,2,1,1,1,4,4,2,2,4,2,2,2,4,3,4,1,2,3,1,1,1,3,3,1,2,1,1,3,1,3,1,1,1,4,1,1,3,3,2,2,4,1,2,4,4,2,1,2,1,1,1,3,2,3,2,2,4,4,2,2,2,2,2,3,4,1,1,1,4,3,1,4,1,4,2,1,4,2,4,2,1,1,2,4,4,1,3,4,1,4,4,1,4,1,2,2,2,1,2,1,2,2,2,1,2,2,2,1,1,3,1,1,2,1,3,3,3,4,4,4,3,4,4,1,1,3,1,4,3,3,2,1,3,1,3,2,2,2,3,3,4,1,1,4,2,3,2,1,4,1,1,1,1,2,4,4,1,1,1,1,2,4,4,4,1,2,1,3,4,2,1,3,1,3,3,4,4,2,1,1,4,4,2,2,4,2,4,4,2,4,4,1,1,2,1,1,2,1,4,1,2,2,2,1,4,3,3,2,2,1,1,2,2,4,2,2,4,1,2,4,2,2,4,2,1,4,4,3,4,1,2,2,2,1,4,4,2,4,1,1,4,2,3,2,1,1,4,3,3,2,1,4,4,2,2,4,1,1,4,3,2,4,4,1,2,2,3,1,1,2,3,1,1,1,1,1,4,4,2,4,1,3,3,2,4,1,4,1,4,1,2,1,1,2,4,1,2,3,2,1,1,1,3,3,2,2,2,2,1,1,2,3,4,4,3,4,1,3,3,2,2,2,2,4,1,2,3,3,3,2,4,1,2,4,1,2,1,1,2,2,2,4,4,2,3,2,4,3,1,2,3,2,2,1,4,1,1,1,1,2,4,2,4,4,2,1,2,2,1,1,1,3,1,3,2,2,2,2,4,1,1,1,1,2,2,2,3,2,2,1,2,1,4,2,4,1,2,2,1,4,2,1,2,2,2,4,2,4,1,2,1,4,2,1,2,2,3,2,2,2,2,3,1,2,2,4,4,1,3,2,4,2,4,2,1,2,2,1,4,2,3,2,4,2,4,4,2,4,1,2,4,1,4,3,1,1,2,2,2,2,2,2,4,2,2,2,2,1,4,1,2,2,2,1,1,2,2,2,2,2,4,3,3,4,2,1,1,2,2,4,2,1,1,2,2,4,1,3,3,2,2,4,2,2,4,1,4,4,4,1,4,4,2,4,1,3,2,2,1,2,2,4,2,4,1,3,2,2,4,1,3,2,2,3,4,4,4,1,2,4,2,1,1,4,2,2,4,2,4,3,1,4,2,1,3,3,3,4,3,1,3,2,1,4,2,1,1,1,2,4,2,1,1,1,2,4,1,2,3,2,2,2,4,3,1,4,2,3,3,2,3,2,1,2,4,3,2,3,1,3,2,1,3,4,1,3,2,2,2,1,1,1,2,1,1,4,2,4,2,1,4,1,4,3,1,1,3,4,2,1,2,2,2,4,1,3,2,2,1,4,2,1,4,4,2,4,1,2,4,1,4,2,1,1,2,1,4,4,1,2,4,1,1,4,1,1,3,4,3,3,2,4,2,2,4,4,4,1,1,2,2,4,2,4,2,2,1,2,2,2,4,4,1,4,2,1,2,1,1,2,1,2,1,1,3,1,1,2,1,2,2,4,2,4,3,1,4,4,1,2,4,2,2,4,3,2,2,1,4,2,1,4,3,1,2,2,2,4,4,3,3,2,2,1,4,1,1,4,1,4,3,1,4,4,4,1,4,2,4,2,2,1,2,1,2,4,1,3,2,1,3,1,3,1,2,2,1,1,2,2,3,1,1,2,2,2,2,2,4,4,2,3,1,2,2,4,4,3,2,2,3,1,1,3,3,3,3,1,3,4,2,2,3,1,1,2,4,1,3,4,2,4,2,1,3,3,2,4,4,2,1,1,2,1,4,2,3,1,1,4,1,2,3,2,2,3,2,1,3,3,2,2,2,2,4,4,2,3,2,2,2,4,1,4,4,2,4,4,2,1,4,1,3,2,2,3,1,1,4,1,2,1,2,1,1,1,2,1,4,4,1,4,4,1,4,1,1,4,1,1,1,2,1,2,2,2,4,2,1,2,2,1,2,4,1,2,1,1,4,2,4,4,2,2,4,1,3,3,1,1,2,1,1,2,1,4,1,4,3,1,2,3,2,1,2,4,2,4,2,2,2,2,4,3,1,1,2,4,2,4,1,2,1,2,1,1,2,1,4,1,4,4,4,4,3,4,2,1,2,2,1,1,3,1,2,2,2,4,1,2,4,4,2,4,1,1,2,2,4,2,2,2,4,3,4,4,2,4,4,1,4,3,1,1,4,4,2,3,1,1,2,1,3,2,1,4,1,2,2,2,2,2,3,1,4,4,2,2,3,2,4,1,2,3,1,2,2,1,1,2,4,2,1,4,1,2,1,2,2,4,2,2,4,1,4,3,1,1,1,1,1,1,2,4,4,2,2,4,1,2,2,1,2,4,2,1,2,2,2,4,1,3,2,1,4,4,1,2,4,4,1,4,1,4,3,1,4,1,4,3,4,2,4,2,2,1,4,1,2,2,2,1,4,4,1,2,1,1,4,2,4,2,2,1,3,2,1,4,4,2,2,2,2,2,4,2,1,1,1,2,2,4,1,1,3,1,1,1,4,1,4,3,4,2,4,3,1,4,1,1,1,1,3,1,3,4,4,1,2,4,4,4,3,1,4,1,3,1,3,4,1,1,1,4,1,1,4,1,3,3,1,3,2,4,4,1,1,1,2,2,2,2,2,4,4,1,4,4,4,2,4,1,3,3,1,2,4,1,4,3,1,3,1,1,4,2,3,1,1,2,2,2,1,4,2,2,2,4,3,1,3,1,1,4,2,2,1,1,1,1,4,4,2,4,2,2,3,4,3,2,2,1,2,2,4,1,4,2,1,2,1,2,2,2,2,1,4,2,2,4,1,1,1,3,4,1,1,3,3,4,2,1,3,2,4,1,1,1,4,1,1,3,2,4,1,4,2,3,3,3,2,2,2,1,4,1,2,2,2,2,3,1,1,1,1,4,3,4,4,3,3,4,4,1,4,1,2,2,2,4,4,2,2,2,3,4,1,2,4,1,1,4,4,1,1,4,2,2,2,2,4,3,3,2,2,2,1,1,2,2,2,3,4,2,1,4,2,4,1,2,4,2,4,1,2,2,1,4,2,4,4,4,3,2,1,3,3,2,1,2,1,2,4,2,1,4,2,1,2,1,3,2,3,2,4,1,1,3,2,4,2,3,2,1,2,4,3,1,4,4,4,4,4,4,1,2,2,4,3,1,3,4,1,3,3,2,2,4,1,3,1,1,1,4,1,1,1,2,1,4,3,2,4,1,3,2,4,4,4,4,1,4,4,2,2,1,3,4,4,2,4,1,1,2,2,1,1,1,1,1,1,1,4,1,1,1,2,2,2,4,2,3,4,4,2,2,1,2,1,3,1,1,3,2,4,3,2,2,1,4,2,1,1,3,4,1,4,4,4,2,2,4,2,1,2,3,2,1,1,3,2,1,1,2,2,3,2,1,4,2,2,1,4,1,1,4,2,2,4,4,2,4,1,1,4,1,3,2,4,1,4,2,2,4,2,4,4,2,1,1,2,1,1,4,1,4,1,2,4,2,4,2,2,3,3,1,2,1,1,4,3,1,1,2,2,1,4,1,1,2,2,1,1,4,1,2,4,1,2,2,1,1,4,2,1,1,4,1,2,4,2,1,4,2,1,4,4,1,1,4,1,1,4,2,1,4,1,1,4,3,3,2,4,1,4,1,3,2,1,1,4,1,1,1,1,2,4,1,3,3,1,1,4,1,3,2,2,2,2,2,4,4,4,2,1,2,4,4,2,4,3,1,3,4,2,2,2,1,3,1,3,3,4,4,1,2,2,2,1,1,3,3,2,1,2,2,2,2,4,2,4,3,1,2,1,4,2,2,3,3,2,2,4,3,2,4,4,2,4,4,2,4,2,1,2,1,4,3,1,2,1,1,1,1,1,2,4,1,3,2,2,2,2,2,1,4,2,4,2,1,1,4,2,1,4,1,4,1,2,2,1,1,1,4,2,4,2,4,2,2,2,4,2,1,2,4,1,1,1,2,3,4,1,1,3,2,2,4,4,2,4,2,2,4,2,1,2,4,2,4,2,4,2,1,1,4,2,4,4,1,4,2,2,1,4,2,1,4,1,3,2,1,3,3,2,1,3,4,4,3,1,3,3,4,3,3,1,4,4,1,1,1,2,2,1,1,1,2,2,2,1,3,2,4,1,2,3,2,1,1,1,1,4,2,4,4,1,3,2,1,4,1,2,4,2,2,4,2,1,1,4,4,1,2,2,2,1,2,1,4,1,3,3,1,4,3,1,1,4,1,1,4,1,3,2,1,3,4,4,2,4,1,2,2,3,4,1,2,1,1,2,2,2,4,1,1,2,1,4,1,1,2,2,1,4,4,2,4,4,1,1,4,4,4,1,1,2,4,1,4,4,4,1,4,1,4,4,1,4,2,2,4,1,1,2,4,1,2,4,1,2,2,3,2,1,4,4,2,2,4,1,2,4,1,2,4,2,1,1,2,4,4,1,1,1,2,4,2,2,1,3,2,1,2,2,1,2,3,1,2,2,2,4,1,2,4,1,2,4,1,4,2,4,2,3,2,1,2,2,4,3,1,1,1,2,1,1,3,2,4,1,1,2,1,4,3,1,2,4,1,1,2,1,2,2,2,4,4,1,1,4,4,2,2,1,4,2,2,1,2,2,2,4,2,2,4,2,4,2,2,2,4,1,3,3,1,3,3,2,2,4,3,2,2,2,2,2,3,2,4,1,1,2,2,3,3,2,4,4,4,4,4,3,2,2,2,1,1,1,4,3,3,3,2,2,1,4,4,1,4,2,3,1,1,3,1,1,4,4,2,1,2,1,1,1,1,1,1,2,1,1,4,1,3,2,2,4,2,1,4,2,1,4,2,2,2,2,1,2,2,1,4,2,1,4,1,3,2,2,1,2,2,1,4,2,1,2,2,2,4,2,2,4,4,1,1,2,2,4,2,4,1,2,4,4,2,4,1,2,2,4,1,2,3,2,2,4,1,1,4,2,4,1,2,4,2,2,1,2,2,4,2,1,1,4,2,1,2,1,2,4,1,2,4,2,2,2,2,1,4,1,4,2,4,1,1,2,1,1,2,3,4,1,1,1,1,1,4,1,1,1,1,4,3,1,2,1,3,4,4,4,3,1,1,2,1,4,1,2,1,1,1,1,2,2,2,1,2,2,2,2,1,4,4,2,2,4,2,2,2,2,1,2,1,2,4,2,1,4,2,3,2,2,2,4,4,1,2,2,1,2,3,2,4,1,2,4,2,2,4,1,2,2,4,1,4,2,4,2,2,2,2,4,4,4,4,1,4,1,2,4,1,1,4,1,1,4,2,4,4,1,4,1,3,1,1,1,4,4,4,1,3,3,4,4,1,1,1,4,1,2,1,3,1,2,2,1,1,3,1,3,2,2,4,4,2,1,1,1,3,2,2,2,4,2,1,3,4,1,1,3,4,4,3,2,1,1,4,1,2,4,4,1,1,4,4,4,2,4,3,2,1,1,2,1,3,2,4,1,1,3,3,1,2,4,3,2,1,1,1,1,2,2,2,2,1,2,4,2,4,3,2,1,4,2,1,1,2,4,3,1,1,2,3,2,1,1,1,4,2,1,3,2,2,1,2,4,4,4,1,1,4,4,1,1,3,2,4,1,1,3,2,2,2,4,4,1,2,4,1,3,1,2,2,1,1,4,3,3,3,1,2,4,4,1,1,1,2,2,2,1,2,1,1,1,2,1,2,4,4,1,3,4,4,1,1,2,1,3,2,4,1,1,3,2,1,2,2,2,4,1,1,4,2,1,1,2,4,3,3,2,4,4,2,1,1,4,2,4,1,2,4,4,2,4,2,2,2,3,2,2,3,2,2,3,3,3,1,1,1,1,1,1,3,3,2,3,3,3,1,3,1,1,3,2,2,2,2,3,3,2,1,3,3,4,4,4,3,1,1,3,2,4,3,2,4,4,2,4,4,2,3,1,1,4,4,4,3,2,1,1,4,4,2,1,1,4,1,4,3,1,1,1,1,4,2,1,2,2,4,2,3,3,1,3,2,4,3,3,4,1,1,1,1,1,3,1,3,3,2,2,4,1,1,2,2,2,2,4,3,4,2,4,4,4,1,3,1,4,4,4,1,2,1,3,4,2,2,1,1,4,3,2,4,4,2,1,2,4,2,1,3,2,2,1,4,4,4,4,1,2,2,4,2,1,2,2,2,2,2,1,2,4,3,1,4,3,4,4,2,3,2,2,3,1,2,2,3,4,4,3,1,2,4,1,4,4,2,4,2,4,1,2,1,1,1,2,2,1,2,1,1,1,3,1,2,1,4,4,3,3,1,1,2,1,2,4,1,4,1,2,2,4,1,4,4,1,4,4,2,3,3,2,3,2,1,4,3,1,3,2,4,3,3,1,3,4,2,2,4,1,3,3,2,1,2,1,3,2,4,2,4,1,1,3,2,2,4,2,2,4,4,1,4,4,2,3,1,3,2,2,3,1,3,2,4,3,3,3,2,2,1,3,2,2,1,3,3,2,1,1,2,2,4,4,2,4,1,3,3,4,1,1,2,3,1,2,2,1,2,1,4,2,4,1,2,1,1,2,3,4,4,1,4,2,3,4,2,1,2,1,3,2,2,2,1,4,3,2,1,4,4,4,3,4,1,1,4,1,1,4,2,4,4,2,4,4,2,1,4,1,3,4,1,1,4,1,2,2,2,1,4,2,1,4,1,1,4,2,3,3,1,3,3,2,4,4,4,3,3,2,1,1,2,4,3,1,2,4,1,3,4,4,2,2,2,2,4,1,1,4,1,1,4,2,3,3,4,3,2,2,2,2,2,3,1,4,1,4,3,3,2,3,4,4,4,2,2,2,2,3,2,1,4,1,1,1,2,1,1,2,1,4,1,1,3,2,4,4,2,4,3,1,2,4,2,4,4,1,2,2,4,2,2,2,4,2,4,2,4,2,2,4,1,2,4,2,2,4,3,2,4,2,3,2,1,4,2,4,3,2,4,1,4,1,3,4,3,3,1,3,3,2,2,3,3,1,3,2,1,3,3,1,1,2,1,3,3,4,4,3,1,1,2,1,3,4,2,4,1,2,2,2,4,2,2,2,4,4,1,3,2,1,3,3,3,1,1,2,4,1,2,4,2,2,2,1,2,2,2,4,3,3,1,3,2,2,4,2,2,3,4,1,3,1,2,2,4,1,1,2,2,1,4,2,4,4,2,4,2,2,4,4,1,2,1,2,2,4,1,3,2,1,3,3,4,3,4,2,4,2,2,4,2,4,1,4,2,4,4,1,3,3,3,3,2,2,1,4,2,1,1,4,4,4,2,1,4,2,1,2,1,1,2,1,1,4,4,1,4,2,1,1,4,1,4,1,1,1,1,2,2,2,2,2,4,3,2,2,1,4,1,1,2,2,2,1,1,4,1,2,2,1,1,1,2,3,2,2,2,2,4,2,4,4,2,3,4,2,4,3,1,4,2,2,3,4,2,2,4,1,1,4,2,1,2,1,3,2,1,3,4,2,2,4,1,2,4,4,2,4,2,2,4,1,4,2,4,2,4,2,2,2,1,3,4,2,2,4,1,3,2,4,3,2,4,3,3,2,1,4,2,1,2,4,1,4,1,2,4,1,2,4,1,1,2,1,3,1,2,2,3,2,1,1,2,2,4,2,1,1,2,1,2,2,1,2,2,4,4,2,4,4,2,3,1,2,2,2,2,3,2,2,3,3,1,3,3,1,3,3,1,3,1,2,2,2,2,1,4,4,2,4,1,4,1,2,2,1,1,2,1,2,2,4,1,4,4,2,4,3,1,4,4,4,4,4,2,3,3,4,2,1,2,2,2,4,3,1,1,3,4,4,4,1,4,1,4,4,2,4,4,1,4,2,2,4,1,2,2,1,3,3,2,4,4,2,3,3,1,1,4,1,1,4,2,4,2,2,2,1,4,1,4,4,3,4,1,1,2,4,4,1,2,4,1,2,4,2,2,3,3,1,1,1,1,1,1,1,3,1,1,2,2,1,4,4,4,3,3,1,4,1,2,1,4,1,3,3,4,1,4,3,3,4,2,4,3,1,3,2,4,1,4,3,1,4,1,4,2,1,1,4,4,3,3,2,4,4,2,2,4,1,3,3,3,4,4,4,1,4,2,3,4,3,4,3,1,3,2,1,2,1,2,2,1,4,1,4,1,4,4,4,1,2,1,3,4,1,3,3,1,1,4,1,3,1,2,3,4,1,3,1,2,1,2,1,2,3,1,3,2,1,4,1,4,4,4,2,1,2,2,4,2,2,3,2,4,1,2,2,1,4,1,1,4,2,1,4,2,3,2,4,1,4,2,2,2,2,1,2,2,3,3,2,3,4,2,1,1,1,3,4,1,4,4,4,1,3,2,4,3,1,2,4,2,3,2,2,1,2,1,2,4,2,2,1,2,3,3,1,1,3,2,1,1,4,1,4,3,1,1,1,4,3,1,4,2,4,3,2,4,3,2,1,3,4,3,2,4,2,4,3,1,3,2,2,2,4,1,3,3,1,4,4,2,1,4,2,4,4,4,2,4,4,4,4,2,1,2,2,3,4,1,3,3,4,3,3,2,2,4,3,1,2,4,3,3,2,1,4,4,3,4,1,4,4,1,3,2,1,1,1,2,4,2,1,4,2,1,2,4,1,3,1,2,1,4,2,3,4,1,2,4,1,2,1,2,3,1,2,1,2,3,4,1,2,4,1,2,3,4,4,3,4,1,3,2,4,2,1,2,4,4,2,2,1,2,4,1,4,3,4,2,2,4,1,4,2,1,1,4,1,3,3,1,3,2,4,3,4,1,4,4,4,3,2,2,1,4,2,1,4,1,3,3,1,3,3,2,4,4,2,1,4,4,2,1,2,4,3,1,4,4,4,2,2,2,2,4,1,4,4,2,4,2,1,3,3,2,4,1,2,1,2,2,2,4,1,3,1,2,2,1,1,1,2,2,4,1,2,3,2,2,1,1,1,1,4,2,2,1,4,4,4,2,1,2,4,1,4,2,1,4,1,4,4,2,1,4,2,3,3,2,3,4,1,1,1,4,2,4,1,1,2,4,4,4,2,4,4,2,2,2,1,2,1,1,2,1,2,4,4,4,2,4,2,3,3,2,2,4,1,4,2,2,3,3,1,1,4,3,2,2,2,2,3,1,2,3,4,4,1,2,4,2,3,3,1,2,4,1,2,2,2,2,3,1,4,3,2,1,4,1,2,1,2,2,1,2,1,4,3,1,1,1,2,1,4,2,2,4,1,4,2,1,4,2,4,3,4,1,3,3,2,4,2,1,4,4,2,1,4,4,4,2,4,2,4,1,1,2,1,3,2,1,3,4,1,1,4,1,4,4,1,1,4,1,1,4,4,4,4,2,1,4,3,1,4,4,4,3,1,3,1,1,3,2,2,4,4,2,3,2,4,4,2,3,1,1,3,2,3,1,1,1,1,3,4,2,2,4,1,1,4,1,3,4,1,3,1,1,3,1,1,2,2,2,4,2,2,1,4,1,1,1,2,2,4,3,3,1,3,4,3,1,2,4,1,4,1,4,3,3,1,4,3,2,2,2,2,2,2,1,2,2,2,4,1,2,2,1,2,1,2,1,4,4,2,3,1,1,3,1,1,2,2,2,3,4,1,4,1,2,1,4,1,1,1,1,4,2,4,1,3,1,2,1,1,1,1,1,1,3,3,1,1,3,3,1,1,4,2,3,1,1,2,2,2,2,2,2,1,1,1,3,2,4,3,3,4,4,4,2,1,1,3,2,2,1,1,2,2,2,2,1,4,3,3,2,2,4,2,2,1,4,3,1,2,4,4,4,4,4,2,1,1,1,1,1,3,3,4,1,4,4,1,3,1,1,1,1,1,2,2,1,4,4,4,2,1,4,1,1,2,4,4,4,3,4,2,1,1,1,3,4,4,1,1,1,4,4,1,4,1,3,3,2,4,1,1,1,4,2,2,4,1,4,1,4,1,4,2,4,4,1,1,4,3,3,2,1,2,1,4,3,2,1,3,2,3,2,1,1,3,4,1,3,3,4,2,4,1,2,1,1,3,1,2,3,2,4,1,2,4,4,2,2,2,2,4,1,4,2,1,4,1,3,1,1,3,1,3,2,4,4,1,4,2,1,2,2,4,4,4,2,1,4,3,1,4,2,1,2,3,2,2,2,4,2,1,4,1,1,4,2,1,4,4,4,4,2,2,4,4,1,4,2,4,3,2,4,4,2,2,4,1,3,4,2,2,4,3,4,1,4,3,2,2,2,4,4,4,4,2,2,4,1,1,2,1,2,4,2,1,2,1,1,2,1,1,1,1,2,4,1,1,2,4,1,1,4,1,2,4,1,1,2,1,4,2,4,2,1,3,1,2,3,2,4,2,1,3,3,1,1,1,4,1,3,1,1,1,2,2,3,4,2,4,3,1,1,2,4,1,4,2,2,4,3,2,2,2,3,2,2,1,4,2,1,4,2,2,4,1,3,4,2,2,4,2,1,4,2,3,2,2,2,4,2,2,2,1,4,2,2,2,4,1,2,3,2,1,4,2,2,4,4,4,1,2,1,4,1,1,2,1,3,1,2,3,1,3,3,4,2,1,1,2,3,1,4,2,2,2,4,2,2,2,4,4,1,2,2,1,4,2,1,1,1,4,2,1,1,4,4,3,3,2,2,1,2,2,1,1,4,3,3,4,1,2,4,3,1,1,2,2,4,1,2,3,1,3,4,1,2,1,2,2,3,1,2,4,1,2,3,3,2,3,3,1,2,4,1,1,4,2,4,4,2,1,1,2,4,2,2,4,1,2,1,4,1,2,4,4,2,2,2,2,2,1,4,4,1,4,4,2,2,4,1,3,1,1,2,2,1,3,3,2,3,1,2,2,4,3,2,3,1,2,4,2,2,4,4,3,1,2,3,4,4,3,1,2,1,1,4,2,3,1,3,4,1,3,4,1,2,4,2,2,2,3,1,4,4,3,1,1,3,2,2,2,2,2,1,4,4,2,3,4,1,4,1,1,4,1,1,4,4,1,2,1,4,2,1,2,1,1,3,1,2,3,4,2,4,4,3,2,1,2,4,2,1,4,3,1,3,2,4,3,4,2,2,2,2,1,2,1,4,4,1,3,3,2,4,4,1,1,1,1,1,2,1,3,1,4,3,2,1,1,4,4,2,2,2,3,3,1,2,3,4,2,4,1,1,1,2,2,1,1,1,2,2,1,2,4,4,4,2,1,2,2,3,2,4,1,2,1,2,3,1,2,2,3,3,3,3,3,4,1,4,1,2,4,1,2,3,3,4,2,1,1,4,3,2,4,2,4,3,1,1,1,4,2,4,3,4,3,3,1,3,2,1,1,1,2,2,1,2,1,3,4,4,4,2,1,4,3,2,2,2,1,4,2,3,4,2,2,4,1,3,1,1,4,4,1,1,4,4,2,2,2,2,4,1,1,1,1,1,4,2,4,4,4,3,1,1,1,4,1,3,3,3,2,2,2,3,4,1,4,4,4,1,2,2,2,4,1,4,1,3,2,1,2,2,2,2,2,4,2,4,1,2,2,2,2,2,4,2,4,1,3,1,3,2,2,2,1,2,4,3,4,1,1,1,3,2,4,1,1,2,4,4,1,3,2,1,4,4,1,1,2,2,4,4,4,4,1,1,3,4,4,1,1,1,3,1,4,4,1,1,3,1,3,1,1,2,2,1,1,2,1,2,2,4,2,4,4,4,1,2,1,3,4,3,1,1,1,4,3,2,2,2,2,1,1,2,4,1,1,1,4,1,2,4,1,2,2,3,4,1,4,3,3,2,2,2,1,2,2,1,4,1,1,4,4,1,2,2,2,2,2,1,4,1,2,4,2,2,4,4,1,2,1,2,4,1,4,4,2,2,4,2,1,4,2,1,2,2,2,1,1,2,4,1,1,1,1,1,4,1,4,4,1,1,1,2,1,2,1,1,1,2,4,1,2,2,1,2,2,4,1,2,2,4,2,2,2,4,2,1,2,2,1,1,1,3,2,2,2,1,4,1,1,1,1,1,4,1,1,1,1,1,1,4,4,1,4,1,1,2,1,1,1,2,2,2,4,3,1,3,1,1,2,2,1,1,1,1,4,3,1,1,2,3,1,1,1,1,4,2,4,3,4,4,2,3,2,4,4,2,1,4,4,2,1,4,4,3,2,2,2,2,2,1,2,1,1,4,2,2,4,1,3,3,2,2,4,1,2,2,2,3,2,2,3,2,1,3,4,1,2,4,3,1,4,2,1,4,4,2,4,1,4,4,4,2,2,2,2,2,4,2,4,1,4,4,3,1,4,2,2,2,2,1,2,2,4,2,2,1,1,1,4,1,4,2,4,2,1,4,2,1,1,2,1,1,2,2,3,1,2,4,1,1,4,2,1,2,2,1,2,2,2,1,1,2,1,1,4,3,1,2,4,1,1,4,2,1,1,1,2,4,1,1,2,2,4,2,1,1,1,1,2,1,1,1,4,3,1,4,1,3,2,2,1,4,1,2,1,2,1,1,2,1,2,4,1,1,1,3,3,1,2,3,1,1,2,2,4,3,1,4,2,4,2,4,4,1,4,1,2,4,1,3,4,1,4,2,2,4,4,1,1,4,2,1,4,4,4,4,4,1,4,4,3,2,2,1,2,1,1,2,4,1,1,2,2,4,2,2,4,2,3,3,1,2,4,2,2,4,3,2,2,4,2,1,2,4,2,1,4,4,4,1,2,1,2,2,1,1,2,2,1,2,2,2,1,1,2,4,1,4,2,4,1,4,1,1,1,2,2,4,1,3,2,2,1,4,3,3,2,2,1,4,2,2,2,2,4,4,1,4,3,1,3,2,3,3,3,2,3,2,1,3,4,3,1,4,4,1,4,1,3,3,2,4,4,4,2,3,2,4,2,4,1,1,3,1,4,4,1,1,1,1,1,4,3,2,2,2,4,1,3,2,2,2,1,2,4,4,2,4,4,1,2,2,1,2,1,1,3,3,2,1,2,1,2,2,4,1,2,1,2,2,2,2,4,4,1,4,2,2,2,2,1,4,1,2,4,1,3,4,4,1,4,4,1,4,2,3,1,1,1,2,2,1,4,2,1,3,2,2,4,1,2,4,2,1,4,4,2,1,1,2,2,1,1,4,1,3,2,2,2,4,3,3,2,2,3,4,1,2,3,2,2,4,1,1,2,2,3,2,4,1,1,2,1,4,4,1,2,4,3,2,1,3,3,2,2,1,2,2,4,1,2,4,2,1,4,3,2,1,2,2,4,1,1,4,4,3,3,1,1,3,2,3,2,2,1,2,2,2,4,1,3,2,1,1,4,1,4,2,1,1,2,2,1,4,4,1,1,2,2,4,4,2,2,2,4,2,4,1,2,1,2,4,4,1,4,2,1,4,2,4,4,2,1,2,1,1,4,4,2,4,1,1,4,4,2,4,1,2,4,3,1,2,4,1,4,2,2,4,1,3,1,1,1,4,2,3,2,4,3,4,2,3,2,2,4,4,1,1,4,2,2,1,1,3,2,2,4,1,2,3,4,4,4,4,2,1,2,1,2,4,4,2,4,1,3,4,1,1,3,2,2,4,2,4,1,2,2,4,3,2,1,2,3,1,2,1,1,2,1,2,1,4,1,1,4,3,1,2,2,2,1,2,2,1,1,4,2,1,2,1,4,3,2,2,4,1,4,2,1,4,1,4,1,3,4,1,1,1,1,2,2,2,1,3,2,2,2,1,4,3,1,2,2,2,2,4,1,1,2,1,3,3,3,3,2,2,2,4,2,4,2,1,3,2,2,2,4,2,2,4,1,1,4,3,1,2,2,4,2,2,3,3,2,2,4,1,3,2,2,1,4,3,4,3,1,4,4,4,2,1,2,4,4,2,2,1,2,4,2,2,1,4,1,1,2,3,2,4,2,2,4,2,1,4,1,2,4,1,3,3,2,2,4,1,2,4,1,1,2,2,1,1,2,1,2,1,2,4,1,1,2,2,1,4,1,4,1,2,2,1,1,4,3,3,4,3,3,2,3,2,3,1,4,3,4,1,1,2,1,2,3,1,3,1,1,1,3,2,1,2,1,4,1,2,2,1,1,3,3,2,2,1,2,2,1,2,1,2,1,2,2,1,2,2,4,3,4,2,2,1,1,1,1,1,3,3,2,2,4,4,2,3,1,4,1,2,3,3,3,1,4,1,1,4,2,2,4,1,4,4,4,1,4,4,1,2,2,4,2,1,3,1,1,3,4,4,4,4,4,4,4,2,4,4,2,3,2,1,3,3,1,4,4,4,4,4,2,4,3,1,3,2,2,4,4,4,4,1,2,2,1,2,4,2,2,1,3,2,2,4,1,3,2,2,2,2,4,1,2,2,2,2,2,2,1,1,2,4,1,3,3,1,3,3,3,2,1,2,4,3,3,2,2,2,2,2,1,1,2,1,3,3,2,1,4,2,1,2,2,2,2,3,2,4,1,1,1,4,2,2,2,2,4,1,3,1,1,3,4,2,2,2,1,2,4,2,2,4,1,1,1,2,1,2,1,4,2,2,3,4,1,4,4,1,2,4,2,3,2,1,4,2,1,3,3,1,3,4,1,4,2,1,1,4,2,1,2,2,4,3,1,3,2,4,2,1,2,2,1,4,1,3,4,2,4,1,1,4,1,3,1,1,1,1,2,1,1,2,2,3,1,1,1,2,2,1,1,1,4,1,1,4,4,2,1,1,3,2,1,2,4,3,2,4,4,1,4,4,1,2,1,1,4,4,4,4,1,2,4,3,3,3,4,2,4,2,4,1,4,4,4,4,1,2,2,2,4,2,2,4,1,2,1,1,3,2,2,4,2,1,3,1,3,4,1,2,4,4,2,3,1,3,4,2,4,2,2,2,4,4,2,1,2,2,1,4,4,4,2,2,3,1,2,3,3,2,1,4,2,4,1,2,3,3,2,4,2,1,1,2,1,4,4,4,4,4,4,3,4,1,3,2,2,1,2,1,3,3,2,4,4,2,2,1,2,3,3,1,2,4,4,2,1,2,3,4,2,1,4,4,1,4,4,3,3,2,4,2,1,1,2,4,4,4,2,2,4,2,1,2,4,1,4,2,4,3,2,4,4,2,1,4,2,2,3,2,2,1,1,2,4,1,1,4,1,4,4,4,2,1,2,4,4,4,1,2,1,4,2,2,1,1,1,2,1,4,2,1,2,4,4,4,3,3,2,4,4,2,3,1,1,3,2,2,3,2,2,3,2,2,4,3,1,4,1,2,4,3,3,2,1,4,4,4,4,3,4,1,3,1,4,3,4,3,3,4,4,4,3,1,2,4,1,4,4,4,2,4,3,4,1,4,3,4,2,4,2,2,1,4,2,4,1,4,4,3,1,4,3,1,3,3,3,4,2,4,4,1,2,4,2,4,4,4,4,1,3,4,1,4,1,1,1,4,1,3,4,1,2,2,3,4,4,1,1,2,4,4,2,2,1,1,4,4,1,1,2,4,1,3,4,4,4,4,3,1,2,1,1,2,1,4,4,2,1,1,1,1,1,1,3,1,3,4,1,1,4,1,1,1,2,4,4,2,3,2,2,4,4,1,1,4,4,4,4,1,1,4,1,1,4,2,1,1,2,1,2,2,2,4,2,2,4,1,3,2,2,4,4,1,2,4,1,2,4,1,1,4,1,1,4,4,1,4,4,1,2,1,4,4,4,4,3,1,2,4,1,2,2,1,2,1,1,2,4,2,1,1,2,3,3,2,4,1,2,1,4,1,3,1,1,1,1,1,4,2,2,1,2,2,2,2,4,4,1,2,3,1,3,4,3,2,3,3,2,4,4,2,3,1,2,2,2,4,1,4,1,4,2,2,2,2,2,3,2,2,2,3,2,3,4,0};

      Sequences sequence = Sequences.createEmptySequencesInMemory();
      try {
         sequence.addSequence(ByteBuffer.wrap(s));
      } catch (IOException e) {
         e.printStackTrace();
      }

      final SuffixTrayBuilder stb = new SuffixTrayBuilder(sequence, alphabet);
      stb.build("bothLR"); // WARNING: change the method and you must change the type cast in the
      // next line!
      assert (stb.getSuffixDLL() instanceof SuffixXorDLL);
      final SuffixXorDLL suffixDLL = (SuffixXorDLL) stb.getSuffixDLL(); // type cast is okay
      // because I used method
      // 'bothLR' to build the
      // list

      byte[] referenceBWT = bwt(s);

      assertArrayEquals(referenceBWT, BWTBuilder.build(suffixDLL));

      suffixDLL.resetToBegin();
      int[] a = new int[suffixDLL.capacity()];
      int j = 0;
      if (suffixDLL.getCurrentPosition() != -1) {
         a[j++] = suffixDLL.getCurrentPosition();
         while (suffixDLL.hasNextUp()) {
            suffixDLL.nextUp();
            a[j++] = suffixDLL.getCurrentPosition();
         }
      }
      IntBuffer buf = IntBuffer.wrap(a);

      assertArrayEquals(referenceBWT, BWTBuilder.build(buf, sequence));
   }
   

   public static byte[] bwt(final byte[] seq) {
      StringBuilder sb = new StringBuilder(seq.length);
      for(byte b: seq) {
         sb.append(b);
      }
      String org = sb.toString();
      
      String[] bwt_matrix = new String[seq.length];
      
      bwt_matrix[0] = org;
      for (int i = 1; i < bwt_matrix.length; i++) {
         bwt_matrix[i] = bwt_matrix[i-1].substring(1) + bwt_matrix[i-1].charAt(0);
      }
      
      Arrays.sort(bwt_matrix);
      byte[] l = new byte[bwt_matrix.length];
      for (int i = 0; i < bwt_matrix.length; i++) {
         l[i] = Byte.parseByte(bwt_matrix[i].charAt(bwt_matrix[i].length()-1)+"");
      }
      return l;
   }
}
